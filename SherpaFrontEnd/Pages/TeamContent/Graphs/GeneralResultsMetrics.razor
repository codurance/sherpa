@using SherpaFrontEnd.Dtos.Analysis
@using SherpaFrontEnd.Core.Icons
<div class="flex flex-col gap-6 px-6">
    <div class="grid grid-cols-2 md:grid-cols-2 gap-x-6 gap-y-4">
        @foreach (var survey in MetricsData.Surveys)
        {
            <div>
                <p class="text-xs font-semibold text-primary-dark-400 mb-2.5">[@survey.Name.ToUpper()]</p>
                <p class="font-normal text-2xl text-primary-dark-principal leading-6 mb-2.5">@ToPercentage(survey.Average)</p>
                <p class="font-normal text-sm text-primary-dark-principal leading-5 whitespace-nowrap">Team Average</p>
            </div>
        }
    </div>
    <div class="bg-states-informative-100 rounded-lg flex gap-3 items-center text-states-informative-400 py-3 px-4">
        <InfoCircle Width="26" Height="26"/>
        <p class="text-sm font-normal text-primary-dark-principal">The following results show how the team feels they improved  between the penultimate and last surveys.</p>
    </div>
    <div class="grid grid-cols-2 md:grid-cols-2 gap-x-6 gap-y-4">
        @foreach (var lastSurveyCategoryMetric in MetricsData.LastSurveyCategoryMetrics)
        {
            <div>
                <div class="flex gap-1">
                    @if (lastSurveyCategoryMetric.HasImproved)
                    {
                        <div class="pt-0.5 text-states-success-800">
                            <ArrowUp/>
                        </div>
                    }
                    else
                    {
                        <div class="pt-0.5 text-states-error-800">
                            <ArrowDown/>
                        </div>
                    }
                    <div>
                        <p class="font-normal text-2xl text-primary-dark-principal leading-6">@ToPercentage(lastSurveyCategoryMetric.Average)</p>
                        <p class="font-normal text-sm text-primary-dark-principal leading-5 whitespace-nowrap">@lastSurveyCategoryMetric.Name</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private GeneralMetrics _generalMetrics = null;

    private List<SurveyMetric> _survey = new List<SurveyMetric>()
    {
        new SurveyMetric("Survey 1", 0.72),
        new SurveyMetric("Survey 2", 0.72),
        new SurveyMetric("Survey 3", 0.72),
        new SurveyMetric("Survey 4", 0.72)
    };

    private List<LastSurveyCategoryMetric> _lastSurveyCategoryMetrics = new List<LastSurveyCategoryMetric>()
    {
        new LastSurveyCategoryMetric("Real team", 0.72, false),
        new LastSurveyCategoryMetric("Enable Structure", 0.68, false),
        new LastSurveyCategoryMetric("Expert coaching", 0.78, true),
        new LastSurveyCategoryMetric("Supportive org coaching", 0.75, true),
        new LastSurveyCategoryMetric("Compelling direction", 0.81, true)
    };

    public Metrics MetricsData { get; set; }

    protected override void OnInitialized()
    {
        MetricsData = new Metrics(_generalMetrics, _survey, _lastSurveyCategoryMetrics);
    }

    private string ToPercentage(double value)
    {
        return $"{(value * 100):0}%";
    }

}