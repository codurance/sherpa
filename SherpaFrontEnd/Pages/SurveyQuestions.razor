@page "/answer-survey/{surveyId:guid}/{memberId:guid}"
@using SherpaFrontEnd.Dtos
@using SherpaFrontEnd.Dtos.Survey
@using SherpaFrontEnd.Services
@inject ISurveyService SurveyService
@inject NavigationManager NavigationManager
@layout PublicAccessLayout

<div class="flex flex-col items-center">
    <select @bind="_selectedLanguage" class="absolute top-2 right-2 border-0 bg-transparent">
        <option value="@Languages.ENGLISH">English</option>
        <option value="@Languages.SPANISH">Spanish</option>
    </select>
    @if (_survey != null)
    {
        <div class="mt-6 mb-8 flex w-3/4 flex-col rounded-lg border bg-white px-16 py-10 max-w-[740px] border-primary-dark-100">
            <h2 class="mb-2 text-2xl text-primary-dark-principal font-semibold">@_survey.Title</h2>
            <p class="text-primary-dark-principal">@_survey.Description</p>
        </div>
    }
    @if (_questions != null)
    {
        <div class="flex w-3/4 flex-col items-center rounded-lg border bg-white px-16 py-2 pb-10 max-w-[740px] border-primary-dark-100">
            @foreach (var question in _questions.OrderBy(q => q.Position))
            {
                <label>
                    <p class="font-medium text-[#1D233C] mb-4 mt-14 text-center">
                        @(_questions.OrderBy(q => q.Position).ToList().IndexOf(question) + 1). @question.Statement[_selectedLanguage]
                    </p>
                </label>
                <div class=@($"flex {@GetFlexDirection(question)} w-full justify-between p-1 border border-primary-dark-200 rounded-md divide-x divide-primary-dark-100")>
                    @foreach (var response in question.Responses[_selectedLanguage])
                    {
                        <div class="flex flex-1">
                            <input class="hidden peer" type="radio" id="@question.Position-@Array.IndexOf(question.Responses[_selectedLanguage], @response)" name="@question.Position" value="@response">
                            <label class="flex-1 py-2 px-2 text-primary-dark-principal peer-checked:text-white hover:bg-primary-dark-100 peer-checked:bg-[#1D233C] rounded-md text-center" for="@question.Position-@Array.IndexOf(question.Responses[_selectedLanguage], @response)">@response</label>
                        </div>
                    }

                </div>
                <div class="flex w-full justify-between">
                    @foreach (var footLabel in GetFootLabels(question))
                    {
                        <p class="flex-1 py-2 px-2 text-primary-dark-principal text-center text-xs">@footLabel</p>
                    }
                </div>
            }
        </div>
        <div class="flex justify-center py-6 w-3/4 max-w-[740px]">
            <button class="bg-primary-red-principal-800 hover:bg-primary-red-900 rounded-lg px-6 text-white text-base font-bold py-2">Submit</button>
        </div>
    }
</div>


@code {

    [Parameter]
    public Guid SurveyId { get; set; }

    [Parameter]
    public Guid MemberId { get; set; }

    private SurveyWithoutQuestions? _survey;
    private List<Question>? _questions;
    private string _selectedLanguage = Languages.ENGLISH;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _survey = await SurveyService.GetSurveyWithoutQuestionsById(SurveyId);
            _questions = await SurveyService.GetSurveyQuestionsBySurveyId(SurveyId);
        }
        catch
        {
            NavigationManager.NavigateTo(NavigationManager.BaseUri + "error");
        }
    }

    private string GetFlexDirection(IQuestion question)
    {
        return question.Responses[_selectedLanguage][0].Length > 5 ? "flex-col" : "flex-row";
    }

    private IEnumerable<string> GetFootLabels(Question question)
    {
        var isShortAnswer = question.Responses[Languages.ENGLISH][0].Length < 5;
        var questionHasFiveAnswers = question.Responses[Languages.ENGLISH].Length == 5;
        var questionHasFourAnswers = question.Responses[Languages.ENGLISH].Length == 4;
        
        
        if (isShortAnswer && questionHasFiveAnswers && _selectedLanguage == Languages.ENGLISH)
        {
            return new[] { "Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree" };
        }
        
        if (isShortAnswer && questionHasFiveAnswers && _selectedLanguage == Languages.SPANISH)
        {
            return new[] { "Totalmente en desacuerdo", "En desacuerdo", "Neutral", "De acuerdo", "Totalmente de acuerdo" };
        }
        
        if (isShortAnswer && questionHasFourAnswers && _selectedLanguage == Languages.ENGLISH)
        {
            return new[] { "Strongly Disagree", "Disagree", "Agree", "Strongly Agree" };
        }
        
        if (isShortAnswer && questionHasFourAnswers && _selectedLanguage == Languages.SPANISH)
        {
            return new[] { "Totalmente en desacuerdo", "En desacuerdo", "De acuerdo", "Totalmente de acuerdo" };
        }

        return Array.Empty<string>();
    }

}

