@page "/answer-survey/{surveyId:guid}/{memberId:guid}"
@using SherpaFrontEnd.Dtos
@using SherpaFrontEnd.Dtos.Survey
@using SherpaFrontEnd.Services
@inject ISurveyService SurveyService
@inject NavigationManager NavigationManager

<div>
    <select @bind="_selectedLanguage">
        <option value="@Languages.ENGLISH">English</option>
        <option value="@Languages.SPANISH">Spanish</option>
    </select>
    @if (_survey != null)
    {
        <h2>@_survey.Title</h2>
        <div>
            <p>@_survey.Description</p>
        </div>
    }
    @if (_questions != null)
    {
        <main>
            @foreach (var question in _questions.OrderBy(_ => _.Position))
            {
                <label>
                    <p>
                        @question.Statement[_selectedLanguage]
                    </p>
                </label>
                @foreach (var response in question.Responses[_selectedLanguage])
                {
                    <div>
                        <input type="radio" id="@question.Position-@Array.IndexOf(question.Responses[_selectedLanguage], @response)" name="@question.Position" value="@response">
                        <label for="@question.Position-@Array.IndexOf(question.Responses[_selectedLanguage], @response)">@response</label>
                    </div>
                }
            }
        </main>
    }
</div>


@code {

    [Parameter]
    public Guid SurveyId { get; set; }

    [Parameter]
    public Guid MemberId { get; set; }

    private SurveyWithoutQuestions? _survey;
    private List<Question>? _questions;
    private string _selectedLanguage = Languages.ENGLISH;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _survey = await SurveyService.GetSurveyWithoutQuestionsById(SurveyId);
            _questions = await SurveyService.GetSurveyQuestionsBySurveyId(SurveyId);
        }
        catch
        {
            NavigationManager.NavigateTo(NavigationManager.BaseUri + "error");
        }
    }

}