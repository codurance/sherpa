@page "/survey/delivery-settings"
@using SherpaFrontEnd.Dtos
@using SherpaFrontEnd.Model
@using SherpaFrontEnd.Services
@inject NavigationManager NavManager
@inject ITeamDataService TeamDataService
@inject IGuidService GuidService
@inject ISurveyService SurveyService

<div class="bg-gray-100 p-8 flex-1">
    <h2>Launch template survey</h2>
    <EditForm Model="CreateSurveyDto" OnValidSubmit="@CreateSurvey">
        <div class="bg-gray-white rounded-2xl border border-gray-200">
            <DataAnnotationsValidator/>

            <div class="flex">
                <div>
                    <h3>Select team</h3>
                </div>
                <div>
                    <label for="survey-team-id">Team</label>
                    <InputSelect id="survey-team-id" @bind-Value="CreateSurveyDto.TeamId">
                        <option disabled selected="selected">Select a team</option>
                        @foreach (var team in Teams)
                        {
                            <option value="@team.Id">@team.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => CreateSurveyDto.TeamId)"/>
                </div>
            </div>

            <div class="flex">
                <div>
                    <h3>Introduce the survey to your team</h3>
                    <p>This information will be visible to recip√¨ents</p>
                </div>
                <div>
                    <div>
                        <label for="survey-title-input">Title</label>
                        <InputText id="survey-title-input" @bind-Value="CreateSurveyDto.Title"/>
                        <ValidationMessage For="@(() => CreateSurveyDto.Title)"/>
                    </div>
                    <div>
                        <label for="survey-description-input">Description</label>
                        <InputTextArea id="survey-description-input" @bind-Value="CreateSurveyDto.Description"/>
                    </div>
                </div>

            </div>
            <div class="flex">
                <div>
                    <h3>Survey delivery</h3>
                    <p>Schedule when to deliver the survey</p>
                </div>
                <div>
                    <p>This survey will end:</p>
                    <div>
                        <label for="survey-deadline-input">On a specific date</label>
                        <InputDate id="survey-deadline-input" @bind-Value="CreateSurveyDto.Deadline"/>
                    </div>
                </div>
            </div>

        </div>
        <div class="btn-group w-100 mt-5" role="group">
            <button type="submit" class="w-50 btn btn-outline-primary btn-sm">Continue</button>
        </div>

    </EditForm>
</div>

@code {

    [SupplyParameterFromQuery]
    [Parameter]
    public string? Template { get; set; }

    private CreateSurveyDto CreateSurveyDto { get; set; } = new();

    public IEnumerable<Team> Teams { get; set; }


    protected override async Task OnInitializedAsync()
    {
        CreateSurveyDto.SurveyId = GuidService.GenerateRandomGuid();
        if (Template != null)
        {
            CreateSurveyDto.TemplateName = Template;
        }
        CreateSurveyDto.Description = null;
        CreateSurveyDto.Deadline = null;
        CreateSurveyDto.TeamId = null;

        Teams = await FetchAllTeams();
    }

    private async Task<List<Team>> FetchAllTeams()
    {
        return await TeamDataService.GetAllTeams();
    }


    private async Task CreateSurvey()
    {
        await SurveyService.CreateSurvey(CreateSurveyDto);
        NavManager.NavigateTo(NavManager.BaseUri + $"survey/draft-review/{CreateSurveyDto.SurveyId.ToString()}");
    }

}