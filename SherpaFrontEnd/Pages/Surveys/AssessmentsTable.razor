@using SherpaFrontEnd.Model
<h3>Assessments</h3>

@if (Assessments is not null)
{
    @foreach (var assessment in Assessments)
    {
        <h4>@assessment.Name Table</h4>
        <table class="table table-striped">
            <thead>
            <tr>
                <th scope="col">Date</th>
                <th scope="col">Members</th>
                <th scope="col">Completed</th>
                <th></th>
            </tr>
            </thead>
            @if (assessment.Surveys is not null && assessment.Surveys.ToList().Count > 0)
            {
                @foreach (var survey in assessment.Surveys)
                {
                    <tr>
                        <td>@survey.Date</td>
                        <td>-</td>
                        <td>-</td>
                        <td>
                            <div class="btn-group">
                                <button class="btn btn-edit">
                                    <span class="oi oi-pencil"></span>
                                </button>
                            </div>
                        </td>
                        <td><button class="btn btn-outline-primary btn-sm">Send reminder</button></td>
                    </tr>
                }
            }
        </table>
        <button class="btn btn-outline-primary btn-sm" @onclick="() => AddNewSurvey(assessment)">New evaluation</button>
    }
    
}


@code {

    [Parameter]
    public List<Assessment> Assessments { get; set; }
    
    [Parameter]
    public List<string> Emails { get; set; }

    [Parameter]
    public EventCallback<Assessment> OnCreateSurvey { get; set; }
    


    public async Task AddNewSurvey(Assessment assessment)
    {

        var survey = new Survey(DateOnly.FromDateTime(DateTime.Now), Emails);
        
        var surveysList = assessment.Surveys.ToList();
        surveysList.Add(survey);
        assessment.Surveys = surveysList;

        await OnCreateSurvey.InvokeAsync(assessment);
    }
}