<CascadingValue Value="this">
    <ul class="nav nav-tabs my-4">
        @foreach (TabPage tabPage in Pages)
        {
            <li class="nav-item">
                <a
                    class="nav-link @GetButtonClass(tabPage)"
                    @onclick=@(() => ActivatePage(tabPage))>
                    @tabPage.Text
                    @if (@tabPage.Args != null)
                    {
                        <span> (@tabPage.Args.Count())</span>
                    }
                </a>
            </li>
        }
    </ul>
    <section>
        @ChildContent
    </section>
</CascadingValue>


@code{

    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public string? InitialTab { get; set; }

    public TabPage ActivePage { get; set; }
    List<TabPage> Pages = new();

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender) return;

        if (InitialTab == null) return;

        foreach (var tabPage in Pages.Where(tabPage => tabPage.Text.ToLower().Equals(InitialTab.ToLower())))
        {
            ActivatePage(tabPage);
            StateHasChanged();
        }
    }


    protected override void OnInitialized()
    {
        Console.WriteLine(InitialTab);
        if (InitialTab != null)
        {
            Console.WriteLine(InitialTab);
            Console.WriteLine(Pages.Count);
            foreach (var tabPage in Pages)
            {
                Console.WriteLine(tabPage.Text);
                if (tabPage.Text.ToLower().Equals(InitialTab.ToLower()))
                    ActivatePage(tabPage);
            }
        }
    }

    string GetButtonClass(TabPage page)
    {
        return page == ActivePage ? "active" : "";
    }

    void ActivatePage(TabPage page)
    {
        ActivePage = page;
    }

    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
            ActivePage = tabPage;
        StateHasChanged();
    }

}