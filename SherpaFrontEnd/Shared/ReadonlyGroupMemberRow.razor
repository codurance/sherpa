@using SherpaFrontEnd.Model
@using SherpaFrontEnd.Pages

<td><input type="text" class="form-control groups-members_input_readonly" value="@GroupMember.Name" readonly/></td>
<td><input type="text" class="form-control groups-members_input_readonly" value="@GroupMember.LastName" readonly/></td>
<td><input type="text" class="form-control groups-members_input_readonly" value="@GroupMember.Position" readonly/></td>
<td><input type="text" class="form-control groups-members_input_readonly" value="@GroupMember.Email" readonly/></td>
<td>
    <div class="btn-group">
        <button class="btn btn-edit" onclick="@OnEditMemberClick"><span class="oi oi-pencil"></span></button>
        <button class="btn btn-remove" onclick="@OnDeleteMemberClick"><span class="oi oi-trash"></span></button>
    </div>
</td>


@code {
    [Parameter]
    public GroupMember GroupMember { get; set; }
    
    [Parameter]
    public EventCallback<GroupMember> OnEditMember { get; set; }
    
    [Parameter]
    public EventCallback<string?> OnDeleteMember { get; set; }
    
    
    [CascadingParameter]
    public IModalService Modal { get; set; } = default!;

    private async Task OnEditMemberClick()
    {
        GroupMember.IsEditable = true;
        await OnEditMember.InvokeAsync();
    }
    
    private async Task OnDeleteMemberClick()
    {
        
        var modal = Modal.Show<ConfirmationModal>($"Delete {GroupMember.Name} {GroupMember.LastName}?");
        var modalResult = await modal.Result;

        if (!modalResult.Cancelled)
        {
            await OnDeleteMember.InvokeAsync(GroupMember.Email);
        }
    }
}