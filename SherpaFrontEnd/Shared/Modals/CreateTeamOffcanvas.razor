@using SherpaFrontEnd.Services
@using SherpaFrontEnd.Model
@inject ITeamDataService TeamDataService;
@inject IGuidService GuidService;
@inject NavigationManager NavManager

<div class="offcanvas offcanvas-start" tabindex="-1" id="@CanvasId" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
        <h3 class="offcanvas-title" id="offcanvasExampleLabel">Create new team</h3>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <label for="team-name-input">Team's name</label>
        <input @bind="@_newTeamName" id="team-name-input" type="text" required/>
        <button onclick="@CreateTeam">Confirm</button>
        <button>Cancel</button>
    </div>
</div>

@code {

    [Parameter]
    public string? CanvasId { get; set; }

    private string _newTeamName = "";

    private async Task CreateTeam()
    {
        var teamId = GuidService.GenerateRandomGuid();
        await TeamDataService.AddTeam(new Team(teamId, _newTeamName));
        var newUri = NavManager.BaseUri + $"team-content/{teamId.ToString()}";
        NavManager.NavigateTo(newUri);
    }

}